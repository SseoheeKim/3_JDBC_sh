-- SYS 관리자 계정 이용
ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;

-- 사용자 계정 생성
CREATE USER member_ksh IDENTIFIED BY member1234;

-- 생성한 사용자 계정에 권한을 부여
GRANT CONNECT, RESOURCE, CREATE VIEW TO member_ksh;

-- 테이블 스페이스 할당
ALTER USER member_ksh DEFAULT 
TABLESPACE SYSTEM QUOTA UNLIMITED ON SYSTEM;



--------------------------------------------------------------------------------

-- member_ksh 계정

-- 회원 테이블 생성
CREATE TABLE "MEMBER"(
	MEMBER_NO NUMBER PRIMARY KEY,
	MEMBER_ID VARCHAR2(30) NOT NULL,
	MEMBER_PW VARCHAR2(30) NOT NULL,
	MEMBER_NM VARCHAR2(30) NOT NULL,
	MEMBER_GENDER CHAR(1) CHECK(MEMBER_GENDER IN ('M','F')),
	ENROLL_DATE DATE DEFAULT SYSDATE,
	SECESSION_FL CHAR(1) DEFAULT 'N' CHECK(SECESSION_FL IN ('Y','N'))
);

-- 코멘트 추가 (수정은 덮어쓰기로 가능)
COMMENT ON COLUMN "MEMBER".MEMBER_NO IS '회원 번호';
COMMENT ON COLUMN "MEMBER".MEMBER_ID IS '회원 아이디';
COMMENT ON COLUMN "MEMBER".MEMBER_PW IS '회원 비밀번호';
COMMENT ON COLUMN "MEMBER".MEMBER_NM IS '회원 이름';
COMMENT ON COLUMN "MEMBER".MEMBER_GENDER IS '회원 성별';
COMMENT ON COLUMN "MEMBER".ENROLL_DATE IS '회원 가입일';
COMMENT ON COLUMN "MEMBER".SECESSION_FL IS '탈퇴 여부(Y/N)';

DROP TABLE MEMBER;
-- 회원번호 시퀀스
CREATE SEQUENCE SEQ_MEMBER_NO;
--START WITH 1;
--INCREMENT BY 1;
--NOCYCLE;
--NOCACHE;
DROP SEQUENCE SEQ_MEMBER_NO


-- 회원 가입 INSERT 
INSERT INTO MEMBER VALUES (SEQ_MEMBER_NO.NEXTVAL, 'user01', 'pass01', '유저1', 'M', DEFAULT, DEFAULT);
INSERT INTO MEMBER VALUES (SEQ_MEMBER_NO.NEXTVAL, 'user02', 'pass02', '유저2', 'F', DEFAULT, DEFAULT);
INSERT INTO MEMBER VALUES (SEQ_MEMBER_NO.NEXTVAL, 'user03', 'pass03', '유저3', 'F', DEFAULT, DEFAULT);
COMMIT;


-- 아이디 중복 확인
-- 단, 중복 되는 아이디가 입력되었을 때 탈퇴한 계정이면 중복 X
SELECT COUNT(*) FROM MEMBER
WHERE MEMBER_ID = 'user01'
AND SECESSION_FL = 'N'; --> ID가 user01이면서 탈퇴하지 않은 회원 조회
-- 중복이면 1 조회, 중복이 아니면 0


-- 로그인 
SELECT MEMBER_NO, MEMBER_ID, MEMBER_NM, MEMBER_GENDER, 
	TO_CHAR(ENROLL_DATE, 'YYYY"년" MM"월" DD"일" HH24:MI:SS') ENROLL_DATE
FROM MEMBER
WHERE MEMBER_ID = 'user01'
AND MEMBER_PW = 'pass01'
AND SECESSION_FL = 'N';


--회원 목록을 조회(탈퇴회원 제외), 가입일 내림차순으로 조회
SELECT MEMBER_ID, MEMBER_NM, MEMBER_GENDER
FROM MEMBER
WHERE SECESSION_FL = 'N'
ORDER BY MEMBER_NO DESC; --> ENROLL_DATE 대신에 시퀀스 넘버를 사용

-- 회원 수정
UPDATE MEMBER SET MEMBER_NM = '유저1', MEMBER_GENDER = 'M'
WHERE MEMBER_NO = 1; --> PK 사용


-- 비밀번호 수정
UPDATE MEMBER SET MEMBER_PW = 'pass1'
WHERE MEMBER_NO = 1
AND MEMBER_PW = '현재 비밀번호';

-- 회원탈퇴
-- 탈퇴 여부를 'Y'로 변경해 확인
UPDATE MEMBER SET SECESSION_FL = 'Y'
WHERE MEMBER_NO = --loginMember.getLoginNo()
AND MEMBER_PW = '현재 비밀번호';


SELECT * FROM MEMBER;

COMMIT;
ROLLBACK;


--------------------------------------------------------------------

-- 게시판 테이블
CREATE TABLE BOARD(
	BOARD_NO NUMBER CONSTRAINT BOARD_PK PRIMARY KEY,
	BOARD_TITLE VARCHAR2(500) NOT NULL,
	BOARD_CONTENT VARCHAR2(4000) NOT NULL,
	CREATE_DT DATE DEFAULT SYSDATE,
	READ_COUNT NUMBER DEFAULT 0,
	DELETE_FL CHAR(1) DEFAULT 'N' CHECK ( DELETE_FL IN ('Y','N') ),
	MEMBER_NO NUMBER CONSTRAINT BOARD_WRITER_FK REFERENCES MEMBER
);

-- 코멘트 달기
COMMENT ON COLUMN BOARD.BOARD_NO IS '게시글 번호';
COMMENT ON COLUMN BOARD.BOARD_TITLE IS '게시글 제목';
COMMENT ON COLUMN BOARD.BOARD_CONTENT IS '게시글 내용';
COMMENT ON COLUMN BOARD.CREATE_DT IS '게시글 작성일';
COMMENT ON COLUMN BOARD.READ_COUNT IS '조회수';
COMMENT ON COLUMN BOARD.DELETE_FL IS '게시글 삭제 여부';
COMMENT ON COLUMN BOARD.MEMBER_NO IS '작성자 회원 번호';


-- 게시판 번호 시퀀스
CREATE SEQUENCE SEQ_BOARD_NO NOCACHE;
-- NOCACHE : 번호밀림방지

SELECT * FROM MEMBER WHERE SECESSION_FL = 'N';

-- 게시판 샘플 데이터
INSERT INTO BOARD 
VALUES(SEQ_BOARD_NO.NEXTVAL, '샘플 제목1', '샘플1 내용입니다.', 
	TO_DATE('2022-09-20 10:30:12', 'YYYY-MM-DD HH24:MI:SS'), DEFAULT, DEFAULT, 3);

INSERT INTO BOARD 
VALUES(SEQ_BOARD_NO.NEXTVAL, '샘플 제목2', '샘플2 내용입니다.', 
	TO_DATE('2022-09-21 20:17:12', 'YYYY-MM-DD HH24:MI:SS'), DEFAULT, DEFAULT, 3);

INSERT INTO BOARD 
VALUES(SEQ_BOARD_NO.NEXTVAL, '샘플 제목3', '샘플3 내용입니다.', 
	DEFAULT, DEFAULT, DEFAULT, 3);

SELECT * FROM BOARD;
COMMIT;



---------------------------------------------------------------------------------------

-- 댓글 테이블 작성
CREATE TABLE "COMMENT" (
	COMMENT_NO NUMBER,
	COMMENT_CONTENT VARCHAR2(800) NOT NULL,
	CREATE_DT DATE DEFAULT SYSDATE,
	DELETE_FL CHAR(1) DEFAULT 'N' CHECK ( DELETE_FL IN ('N','Y') ),
	MEMBER_NO NUMBER REFERENCES MEMBER,
	BOARD_NO NUMBER REFERENCES BOARD,
	CONSTRAINT COMMENT_PK PRIMARY KEY(COMMENT_NO)
);


COMMENT ON COLUMN "COMMENT".COMMENT_NO IS '댓글 번호';
COMMENT ON COLUMN "COMMENT".COMMENT_CONTENT IS '댓글 내용';
COMMENT ON COLUMN "COMMENT".CREATE_DT IS '댓글 작성일';
COMMENT ON COLUMN "COMMENT".DELETE_FL IS '댓글 삭제 여부';
COMMENT ON COLUMN "COMMENT".MEMBER_NO IS '댓글 작성자';
COMMENT ON COLUMN "COMMENT".BOARD_NO IS '게시글 번호';

-- 댓글 번호 시퀀스 생성
CREATE SEQUENCE SEQ_COMMENT_NO NOCACHE;

-- 댓글 샘플 데이터 삽입
SELECT * FROM "BOARD" WHERE DELETE_FL = 'N';

INSERT INTO "COMMENT" 
VALUES (SEQ_COMMENT_NO.NEXTVAL, '샘플 댓글 1번', DEFAULT, DEFAULT, 3, 3);

INSERT INTO "COMMENT" 
VALUES (SEQ_COMMENT_NO.NEXTVAL, '샘플 댓글 2번', DEFAULT, DEFAULT, 3, 3);

INSERT INTO "COMMENT" 
VALUES (SEQ_COMMENT_NO.NEXTVAL, '샘플 댓글 3번', DEFAULT, DEFAULT, 3, 3);
COMMIT;


-- 게시글 목록 상세 조회(댓글 수 포함)
SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT, MEMBER_NM, READ_COUNT, 
	CASE  
		WHEN SYSDATE - CREATE_DT < 1/24/60
		THEN FLOOR( (SYSDATE-CREATE_DT)*24*60*60 ) || '초 전'	
		WHEN SYSDATE - CREATE_DT < 1/24	
		THEN FLOOR( (SYSDATE-CREATE_DT)*24*60  ) || '분 전'
		WHEN SYSDATE - CREATE_DT < 1
		THEN FLOOR( (SYSDATE-CREATE_DT)*24 )  || '시간 전'
		ELSE TO_CHAR(CREATE_DT, 'YYYY-MM-DD')		
	END CREATE_DT, 
	(SELECT COUNT(*) FROM "COMMENT" C WHERE C.BOARD_NO = B.BOARD_NO) COMMENT_COUNT
FROM BOARD B
JOIN MEMBER USING(MEMBER_NO)
WHERE DELETE_FL= 'N'
ORDER BY BOARD_NO DESC;
-- 상관쿼리의 사용
-- 스칼라 서브쿼리를 사용 시 해석 순서가 메인 쿼리-> 서브쿼리로 해석
-- 별칭을 통한 구분


--------------------------------------------------------------------------------

-- 24시간 차이 == 1
-- 12시간 차이 == 0.5 == 1/24 * 12
-- 1시간 차이  == 1/24 *1
-- 1분 차이	   == 1/24/60 *1
-- 1초 차이    == 1/24/60/60 *1

SELECT FLOOR(( SYSDATE - TO_DATE('2022-09-22') ) * 24 * 60 *60) FROM DUAL;
-- *24 ~시간 전
-- *24 *60 ~분 전
-- *24 *60 *60 ~초 전

--------------------------------------------------------------------------------

-- 게시글 상세 조회(게시글 내용 조회)
SELECT BOARD_NO, BOARD_TITLE, BOARD_CONTENT,
	MEMBER_NM, READ_COUNT,
	TO_CHAR(CREATE_DT, 'YYYY-MM-DD HH24:MI:SS') CREATE_DT
FROM BOARD
JOIN MEMBER USING (MEMBER_NO)
WHERE DELETE_FL = 'N'
AND BOARD_NO = '3';


-- 특정 게시글의 댓글 목록 조회(작성일 오름차순)
SELECT COMMENT_NO, COMMENT_CONTENT, MEMBER_NO, MEMBER_NM,
	CASE  
		WHEN SYSDATE - CREATE_DT < 1/24/60
		THEN FLOOR( (SYSDATE-CREATE_DT)*24*60*60 ) || '초 전'	
		WHEN SYSDATE - CREATE_DT < 1/24	
		THEN FLOOR( (SYSDATE-CREATE_DT)*24*60  ) || '분 전'
		WHEN SYSDATE - CREATE_DT < 1
		THEN FLOOR( (SYSDATE-CREATE_DT)*24 )  || '시간 전'
		ELSE TO_CHAR(CREATE_DT, 'YYYY-MM-DD')		
	END CREATE_DT 
FROM "COMMENT"
JOIN MEMBER USING(MEMBER_NO)
WHERE DELETE_FL = 'N'
AND BOARD_NO = 3
ORDER BY 1;

-- 상세 조회된 게시글의 조회 수 증가
UPDATE BOARD SET READ_COUNT = READ_COUNT + 1 WHERE BOARD_NO = 3;

COMMIT;





















